#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass acmsiggraph
\begin_preamble
% for the following cases use the listed document class option:
% [annual] - Technical paper accepted for presentation at the ACM SIGGRAPH 
%   or SIGGRAPH Asia annual conference.
% [sponsored] - Short or full-length technical paper accepted for 
%   presentation at an event sponsored by ACM SIGGRAPH
%   (but not the annual conference Technical Papers program).
% [abstract] - A one-page abstract of your accepted content
%   (Technical Sketches, Posters, Emerging Technologies, etc.). 
%   Content greater than one page in length should use the "[sponsored]"
%   parameter.
% [preprint] - A preprint version of your final content.
% [review] - A technical paper submitted for review. Includes line
%   numbers and anonymization of author and affiliation information.

% When you submit your paper for review, please use the \TOGonlineID''
% command to include the online ID value assigned to your paper by the
% submission management system. Replace '45678' with the value you were
% assigned.
\TOGonlineid{45678}

% If you are preparing a preprint of your accepted paper, and your paper
% will be published in an issue of the ACM "Transactions on Graphics''
% journal, replace the "0'' values in the commands below with the correct
% volume and number values for that issue - you'll get them before your
% final paper is due.
\TOGvolume{0}
\TOGnumber{0}

% The TOGarticleDOI' command accepts the DOI information provided to you
% during production, and which makes up the URLs which identifies the ACM
% article page and direct PDF link in the ACM Digital Library.
% Replace "1111111.2222222'' with the values you are given.
% \TOGarticleDOI{1111111.2222222}

% If you would like to include links to personal repositories for auxiliary
% material related your research contribution, you may use one or more of
% these commands to define an appropriate URL. The "\TOGlinkslist'' command
% found just before the first section of your document will add hyperlinked
% icons to your document, in addition to hyperlinked icons which point to
% the ACM Digital Library article page and the ACM Digital Library-held PDF.
% \TOGprojectURL{}
% \TOGvideoURL{}
% \TOGdataURL{}
% \TOGcodeURL{}

% Paper title.
\title{Real-Time Rendering and 3D Games Programming: Custom Rendering Engine}

% Author and Affiliation (single author).
%\author{Name \thanks{e-mail: name@unknown.uu}\\ Research Institute}

% Author and Affiliation (multiple authors).
\author{Søren V. Poulsen\thanks{e-mail: svipo@dtu.dk}\\M.Sc. Stud.\\DTU Compute, Lyngby %
\and Geoff Leach\thanks{e-mail:gl@rmit.edu.au}\\Lecturer and Coordinator\\RMIT University%
\and Tim Mutton\thanks{e-mail:tim.mutton@rmit.edu.au}\\Head Tutor\\RMIT University}

% The ``pdfauthor'' command accepts the authors of the work,
% comma-delimited, and adds this information to the PDF metadata.
\pdfauthor{Søren V. Poulsen}

% Keywords that describe your work.
\keywords{opengl,rendering,}
\end_preamble
\options annual
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 92
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Teaser
\begin_inset Graphics
	filename images/temp.png
	display false
	width 20page%
	groupId test

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
You can ignore that LyX writes here 
\begin_inset Quotes eld
\end_inset

Senseless!!!
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset

Crytek Sponza scene
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
maketitle 
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
The command 
\series bold

\backslash
maketitle
\series default
 prepares and prints the title block.
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
This paper describes the design and implementation of a custom engine for
 rendering various 3D scenes using OpenGL.
 Using modern rendering techniques, features such as dynamic point lights,
 screen-space ambient occlusion and deferred rendering has been implemented
 in a GNU/Linux C++11 application with minimal use of external libraries.
 The project has been completed as an assignment in the course 
\emph on
COSC1224/1226 Real-Time Rendering and 3D Games Programming
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://goanna.cs.rmit.edu.au/~gl/teaching/rtr&3dgp/
\end_layout

\end_inset


\end_layout

\end_inset


\emph on
 
\emph default
coordinated by professor Geoff Leach of RMIT University
\emph on
.
 
\end_layout

\begin_layout Abstract
The project has been completed in 12 weeks during semester 2 of 2013 by
 M.Sc.
 Stud.
 Søren V.
 Poulsen of DTU Compute in Lyngby, Denmark.
\end_layout

\begin_layout Date
October 2013
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
copyrightspace
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
When you use a copyright note, the 
\series bold

\backslash
copyrightspace
\series default
 command must be the first command after the start of the first section
 of the body of your paper.
 It ensures the copyright space is left at the bottom of the first column
 on the first page of your paper.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The purpose of this project assignment has been to demonstrate skills and
 knowledge of various OpenGL features.
 Instead of aiming for visual fidelity or high frame rate efficiency 
\end_layout

\begin_layout Section
Features
\end_layout

\begin_layout Standard
Below is a list of the features that are currently part of the rendering
 engine in a working state:
\end_layout

\begin_layout Itemize
Fully deferred rendering 
\end_layout

\begin_layout Itemize
Color(diffuse) texturing and bump-mapping
\end_layout

\begin_layout Itemize
Dynamic and (theoretically) unlimited point light sources
\end_layout

\begin_layout Itemize
Screen-space ambient occlusion
\end_layout

\begin_layout Itemize
Efficient CPU-based ray/scene intersection test using bounding volume hierarchie
s
\end_layout

\begin_layout Section
Implementation
\end_layout

\begin_layout Standard
The application has been implemented without use of a preexisting framework
 or rendering library.
 
\end_layout

\begin_layout Subsection
Deferred Passes
\end_layout

\begin_layout Standard
Deferred rendering is a rendering technique that separates geometry and
 lighting operations into multiple passes.
 Using this technique has the great benefit of reducing the performance
 hit of having many lights in a scene regardless of the complexity of the
 scene geometry.
\end_layout

\begin_layout Standard
In the first pass (the geometry or G-pass), information about the scene
 geometry is gathered into multiple buffers (which in turn are simple textures).
 In this application the texture color (albedo) is stored in a 
\begin_inset Formula $4\times8\,\mbox{bit}$
\end_inset

 texture buffer, the surface normal in a packed 
\begin_inset Formula $2\times16\,\mbox{bit}$
\end_inset

 floating point (FP) texture buffer, and finally the depth and stencil in
 a 
\begin_inset Formula $24+8\,\mbox{bit}$
\end_inset

 FP/integer texture buffer.
\end_layout

\begin_layout Standard
Generating images in this application happens through multiple rendering
 passes.
 The first pass 
\end_layout

\begin_layout Subsection
Lighting
\end_layout

\begin_layout Subsection
Ray-tracing
\end_layout

\begin_layout Standard
In an effort to support basic game-like features such as shooting weapons,
 the application is capable of doing ray-scene intersection.
 That is, given a starting point and direction, determine the closest point
 (if any) of intersection with the triangle meshes that makes up the scene.
 A typical scene has many triangles, so a naive 
\begin_inset Formula $O\left(n\right)$
\end_inset

 search is deemed to be too inefficient when scenes become non-trivial.
\end_layout

\begin_layout Standard
Instead a bounding volume hierarchy (BVH) of axis-aligned bounding boxes
 (AABBs) containing triangles is built in the initialization stage of the
 engine.
 The octree data structure has been selected as the BVH structure.
 When querying for ray-triangle intersections, the top level (root) AABB
 of the BVH tree is tested for intersection with the given ray.
 If there is such an intersection, the 8 children AABBs beneath the root
 is tested and so forth until only leaf nodes are left.
 The leaf nodes contains simple triangle lists, which are then tested against
 the given ray.
\end_layout

\begin_layout Standard
In average- and best-case scenarios this method significantly reduces ray-triang
le intersection tests and makes even large amounts of ray-scene queries
 for each frame feasible.
\end_layout

\begin_layout Subsection
Asset Handling
\end_layout

\begin_layout Standard
Any rendering or game engine requires handling of assets such as shaders,
 textures, models, scripts, etc.
 The efficiency of the asset handling mechanics is a determining factor
 for loading times and/or memory usage, which makes it an important and
 essential part of any rendering engine.
\end_layout

\begin_layout Standard
This application uses a simple string-based caching mechanic.
 Each asset is given a name, which is stored as a simple textual string,
 that in most cases is directly related to the file path of the asset.
  When an asset is requested for usage (e.g.
 a model or texture file) the name of the requested asset is looked up in
 the asset cache.
 If found, a reference to the already loaded asset is returned, leaving
 the file system untouched.
 If the name is not found, then the asset is loaded from the file system
 and entered into the cache system.
\end_layout

\begin_layout Standard
Having all assets handled by the same asset management system has other
 benefits besides reduced file system utilization.
 For example, this application features hot-loadable assets meaning that
 assets that are altered by an external application are almost instantaneously
 reloaded in the engine.
 This has been accomplished using the Linux kernel subsystem 
\emph on
inotify
\emph default
 and has proven to be very beneficial while debugging the application.
 
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
Bla.
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
Bla.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../examples/biblioExample"
options "acmsiggraph"

\end_inset

 
\end_layout

\end_body
\end_document
